require 'rack/oauth2'

class FacebooksController < ApplicationController
  before_filter :require_authentication, :only => [:destroy, :friends, :wall_post, :wall_content]

  rescue_from Rack::OAuth2::Client::Error, :with => :oauth2_error

  # handle Facebook Auth Cookie generated by JavaScript SDK
  def show
    auth = Facebook.auth.from_cookie(cookies)
    authenticate Facebook.identify(auth.user)    
    redirect_to root_url
  end

  # handle Normal OAuth flow: start
  def new
    client = Facebook.auth(callback_facebook_url).client
    redirect_to client.authorization_uri(
      :scope => Facebook.config[:scope]
    )
  end

  # handle Normal OAuth flow: callback
  def create
    client = Facebook.auth(callback_facebook_url).client
    if params[:error_code]
      flash[:notice] = "Not able to login to facebook"
    end
    client.authorization_code = params[:code] || params[:error_code]
    access_token = client.access_token!
    user = FbGraph::User.me(access_token).fetch
    authenticate Facebook.identify(user)
    current_user.create_user if facebook_current_user.blank?
    redirect_to root_url
  end

  def destroy
    unauthenticate
    redirect_to root_url
  end

  def friends
    @facebook_friends = facebook_profile.friends
  end

  def wall_post
    
  end

  def wall_content
    Facebook.user_feed(params)
    flash[:notice] = "message posted successfully"
    redirect_to wall_post_facebook_path
  end

  def show_friends
    @friends = Follow.for_follower(current_user)
  end

  private

  def oauth2_error(e)
    flash[:error] = {
      :title => e.response[:error][:type],
      :message => e.response[:error][:message]
    }
    redirect_to root_url
  end

  
end
